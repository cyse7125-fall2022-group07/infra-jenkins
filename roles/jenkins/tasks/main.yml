---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../../../vars/main.yml

- name: Copy the config file to required location
  ansible.builtin.template:
    src: nginx.config.j2
    dest: "/etc/nginx/sites-available/default"
    owner: root
    group: root
    mode: 0644
  become: true

- name: Test Nginx
  ansible.builtin.command: nginx -t
  changed_when: false
  become: true

- name: Reload Nginx
  ansible.builtin.service:
    name: nginx
    state: reloaded
  become: true

- name: Use Certbot to generate certificates
  ansible.builtin.shell: |
    certbot --nginx -d {{ sub_domain }} --non-interactive --agree-tos -m {{ email }}
  changed_when: false
  become: true

- name: Print Jenkins Password
  ansible.builtin.command: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: user_password
  changed_when: false
  become: true

- name: Jenkins setup wizard disable
  ansible.builtin.lineinfile:
    path: /etc/default/jenkins
    line: JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
  become: true

- name: Make a directory called groovy init
  ansible.builtin.file:
    path: /var/lib/jenkins/init.groovy.d
    state: directory
    mode: 0777
  become: true

- name: File basic-security.groovy should be copied to the directory init.groovy.d
  ansible.builtin.template:
    src: basic-security.groovy
    dest: "/var/lib/jenkins/init.groovy.d"
    owner: root
    group: root
    mode: 0777
  become: true
  changed_when: false

- name: Download jenkins cli into ubuntu home directory
  ansible.builtin.get_url:
    url: http://localhost:8080/jnlpJars/jenkins-cli.jar
    dest: /home/ubuntu
    mode: 0777
  retries: 5
  delay: 5
  become: true
  register: result
  until: result is succeeded

- name: Restart jenkins service
  ansible.builtin.service:
    name: jenkins
    state: restarted
  become: true

- name: Before continuing, wait for Jenkins to launch.
  ansible.builtin.uri:
    url: "http://localhost:8080"
    method: GET
    return_content: "yes"
    timeout: 20
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: 60
  delay: 20
  changed_when: false
  check_mode: false

- name: Install plugin
  jenkins_plugin:
    name: "{{ item }}"
    state: latest
    url_username: "{{ user }}"
    url_password: "{{ user_password }}"
  become: true
  with_items:
    - ace-editor
    - ant
    - antisamy-markup-formatter
    - apache-httpcomponents-client-4-api
    - bootstrap4-api
    - bootstrap5-api
    - bouncycastle-api
    - branch-api
    - build-timeout
    - build-pipeline-plugin
    - caffeine-api
    - checks-api
    - cloudbees-folder
    - command-launcher
    - credentials
    - credentials-binding
    - display-url-api
    - docker-plugin
    - docker-commons
    - docker-workflow
    - docker-java-api
    - durable-task
    - echarts-api
    - envinject
    - email-ext
    - font-awesome-api
    - git
    - git-client
    - git-server
    - github
    - github-api
    - github-branch-source
    - gradle
    - handlebars
    - jackson2-api
    - jaxb
    - jdk-tool
    - jjwt-api
    - jquery3-api
    - jsch
    - junit
    - ldap
    - thinbackup
    - lockable-resources
    - mailer
    - maven
    - matrix-auth
    - matrix-project
    - momentjs
    - nodejs
    - okhttp-api
    - pam-auth
    - pipeline-build-step
    - pipeline-github-lib
    - pipeline-graph-analysis
    - pipeline-input-step
    - pipeline-milestone-step
    - pipeline-model-api
    - pipeline-model-definition
    - pipeline-model-extensions
    - pipeline-rest-api
    - pipeline-stage-step
    - pipeline-stage-tags-metadata
    - pipeline-stage-view
    - plain-credentials
    - plugin-util-api
    - popper-api
    - popper2-api
    - resource-disposer
    - semantic-versioning-plugin
    - scm-api
    - script-security
    - snakeyaml-api
    - ssh-credentials
    - ssh-slaves
    - sshd
    - structs
    - timestamper
    - token-macro
    - trilead-api
    - workflow-aggregator
    - workflow-api
    - workflow-basic-steps
    - workflow-cps
    - workflow-cps-global-lib
    - workflow-durable-task-step
    - workflow-job
    - workflow-multibranch
    - workflow-scm-step
    - workflow-step-api
    - workflow-support
    - ws-cleanup

- name: Restart jenkins service
  ansible.builtin.service:
    name: jenkins
    state: restarted
  become: true

- name: Before continuing, wait for Jenkins to launch.
  ansible.builtin.uri:
    url: "http://localhost:8080"
    method: GET
    return_content: "yes"
    timeout: 5
    body_format: raw
    follow_redirects: "no"
    status_code: 200,403
  register: result
  until: (result.status == 403 or result.status == 200) and (result.content.find("Please wait while") == -1)
  retries: 60
  delay: 5
  changed_when: false
  check_mode: false

- name: Delete groovy init file
  ansible.builtin.file:
    path: "/var/lib/jenkins/init.groovy.d/basic-security.groovy"
    state: absent
  become: true

- name: Ensure pip3 is installed
  apt:
    name: python3-pip
    cache_valid_time: "{{ apt_cache_valid_time|default(omit) }}"
    install_recommends: no
    state: latest
    update_cache: yes
  become: true

- name: install python-jenkins
  command: pip install python-jenkins
  become: true

- name: Create a jenkins job using basic authentication
  community.general.jenkins_job:
    config: "{{ lookup('template', 'templates/jenkinsjob.xml.j2') }}"
    name: "{{ job }}"
    user: "{{ user }}"
    password: "{{ user_password }}"
    url: "http://localhost:8080"

- name: Create a jenkins helm job using basic authentication
  community.general.jenkins_job:
    config: "{{ lookup('template', 'templates/jenkinsjobhelm.xml.j2') }}"
    name: "{{ job1 }}"
    user: "{{ user }}"
    password: "{{ user_password }}"
    url: "http://localhost:8080"


